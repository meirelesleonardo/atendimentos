import sys
import os
from PyQt5.QtWidgets import  QMainWindow, QApplication, QTableWidgetItem, QFileDialog, QMessageBox, QComboBox
from PyQt5 import uic
from PyQt5.QtCore import  QDate, QDateTime, Qt
import datetime
import ConectarSqlite
#import getpass
from PyQt5 import QtCore, QtGui, QtWidgets


# global id_editar
# id_editar = 7649

class Editar(QMainWindow):

    def __init__(self):
        QMainWindow.__init__(self)
        ##Carregando e configurando Formulário
        #uic.loadUi("editar.ui", self)
        ######## Inicio Cópia #########
        self.id_editar = 7649
        self.setObjectName("editar_atendimento")
        self.setEnabled(True)
        self.resize(1462, 691)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("Ico.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.setWindowIcon(icon)
        self.setAutoFillBackground(False)
        self.setStyleSheet("background-image: url(:/newPrefix/logo.jpg);")
        self.layout = QtWidgets.QWidget(self)
        self.layout.setObjectName("layout")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.layout)
        self.gridLayout_4.setHorizontalSpacing(6)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.tabWidget = QtWidgets.QTabWidget(self.layout)
        self.tabWidget.setEnabled(True)
        self.tabWidget.setAcceptDrops(False)
        self.tabWidget.setWhatsThis("")
        self.tabWidget.setAccessibleName("")
        self.tabWidget.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.tabWidget.setStyleSheet("background-image: url(:/newPrefix/logo.jpg);\n"
"image: url(:/newPrefix/logo.jpg);\n"
"border-image: url(:/newPrefix/logo.jpg);")
        self.tabWidget.setTabsClosable(False)
        self.tabWidget.setMovable(False)
        self.tabWidget.setTabBarAutoHide(True)
        self.tabWidget.setObjectName("tabWidget")
        self.Cadastro = QtWidgets.QWidget()
        self.Cadastro.setObjectName("Cadastro")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.Cadastro)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.lbNomeT = QtWidgets.QLabel(self.Cadastro)
        font = QtGui.QFont()
        font.setFamily("Perpetua Titling MT")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.lbNomeT.setFont(font)
        self.lbNomeT.setAlignment(QtCore.Qt.AlignCenter)
        self.lbNomeT.setObjectName("lbNomeT")
        self.gridLayout_2.addWidget(self.lbNomeT, 10, 2, 1, 3)
        self.label_32 = QtWidgets.QLabel(self.Cadastro)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label_32.setFont(font)
        self.label_32.setObjectName("label_32")
        self.gridLayout_2.addWidget(self.label_32, 11, 0, 1, 2)
        self.label_21 = QtWidgets.QLabel(self.Cadastro)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_21.setFont(font)
        self.label_21.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_21.setObjectName("label_21")
        self.gridLayout_2.addWidget(self.label_21, 9, 1, 1, 1)
        self.label_26 = QtWidgets.QLabel(self.Cadastro)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_26.setFont(font)
        self.label_26.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_26.setObjectName("label_26")
        self.gridLayout_2.addWidget(self.label_26, 8, 1, 1, 1)
        self.lbSetor_2 = QtWidgets.QLabel(self.Cadastro)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.lbSetor_2.setFont(font)
        self.lbSetor_2.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.lbSetor_2.setObjectName("lbSetor_2")
        self.gridLayout_2.addWidget(self.lbSetor_2, 7, 2, 1, 1)
        spacerItem = QtWidgets.QSpacerItem(637, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_2.addItem(spacerItem, 6, 0, 1, 4)
        self.comboBoxAtendimento = QtWidgets.QComboBox(self.Cadastro)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.comboBoxAtendimento.setFont(font)
        self.comboBoxAtendimento.setObjectName("comboBoxAtendimento")
        self.comboBoxAtendimento.addItem("")
        self.comboBoxAtendimento.addItem("")
        self.comboBoxAtendimento.addItem("")
        self.comboBoxAtendimento.addItem("")
        self.comboBoxAtendimento.addItem("")
        self.comboBoxAtendimento.addItem("")
        self.gridLayout_2.addWidget(self.comboBoxAtendimento, 5, 2, 1, 2)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_2.addItem(spacerItem1, 7, 0, 1, 1)
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_2.addItem(spacerItem2, 9, 4, 1, 1)
        spacerItem3 = QtWidgets.QSpacerItem(75, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_2.addItem(spacerItem3, 3, 0, 1, 1)
        spacerItem4 = QtWidgets.QSpacerItem(275, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_2.addItem(spacerItem4, 1, 4, 1, 1)
        self.label_34 = QtWidgets.QLabel(self.Cadastro)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_34.setFont(font)
        self.label_34.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_34.setObjectName("label_34")
        self.gridLayout_2.addWidget(self.label_34, 0, 1, 1, 1)
        self.label_31 = QtWidgets.QLabel(self.Cadastro)
        self.label_31.setEnabled(False)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_31.setFont(font)
        self.label_31.setObjectName("label_31")
        self.gridLayout_2.addWidget(self.label_31, 1, 6, 1, 1)
        self.dateSolicitacao = QtWidgets.QDateTimeEdit(self.Cadastro)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.dateSolicitacao.setFont(font)
        self.dateSolicitacao.setObjectName("dateSolicitacao")
        self.gridLayout_2.addWidget(self.dateSolicitacao, 0, 2, 1, 2)
        self.label_28 = QtWidgets.QLabel(self.Cadastro)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_28.setFont(font)
        self.label_28.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_28.setObjectName("label_28")
        self.gridLayout_2.addWidget(self.label_28, 1, 1, 1, 1)
        self.label_23 = QtWidgets.QLabel(self.Cadastro)
        self.label_23.setEnabled(False)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_23.setFont(font)
        self.label_23.setObjectName("label_23")
        self.gridLayout_2.addWidget(self.label_23, 0, 6, 1, 1)
        self.chSol = QtWidgets.QCheckBox(self.Cadastro)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.chSol.setFont(font)
        self.chSol.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.chSol.setObjectName("chSol")
        self.gridLayout_2.addWidget(self.chSol, 4, 1, 1, 1)
        self.dateConcluido = QtWidgets.QDateTimeEdit(self.Cadastro)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.dateConcluido.setFont(font)
        self.dateConcluido.setObjectName("dateConcluido")
        self.gridLayout_2.addWidget(self.dateConcluido, 1, 2, 1, 2)
        spacerItem5 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_2.addItem(spacerItem5, 4, 9, 1, 1)
        self.lineSol = QtWidgets.QLineEdit(self.Cadastro)
        self.lineSol.setEnabled(False)
        font = QtGui.QFont()
        font.setPointSize(11)
        self.lineSol.setFont(font)
        self.lineSol.setText("")
        self.lineSol.setObjectName("lineSol")
        self.gridLayout_2.addWidget(self.lineSol, 4, 2, 1, 2)
        self.chSol_2 = QtWidgets.QCheckBox(self.Cadastro)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.chSol_2.setFont(font)
        self.chSol_2.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.chSol_2.setObjectName("chSol_2")
        self.gridLayout_2.addWidget(self.chSol_2, 3, 1, 1, 1)
        self.label_3 = QtWidgets.QLabel(self.Cadastro)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_3.setFont(font)
        self.label_3.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_3.setObjectName("label_3")
        self.gridLayout_2.addWidget(self.label_3, 5, 1, 1, 1)
        self.lbSetor = QtWidgets.QLabel(self.Cadastro)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.lbSetor.setFont(font)
        self.lbSetor.setText("")
        self.lbSetor.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.lbSetor.setObjectName("lbSetor")
        self.gridLayout_2.addWidget(self.lbSetor, 7, 3, 1, 1)
        self.salvar = QtWidgets.QPushButton(self.Cadastro)
        self.salvar.setObjectName("salvar")
        self.gridLayout_2.addWidget(self.salvar, 14, 5, 1, 1)
        spacerItem6 = QtWidgets.QSpacerItem(661, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_2.addItem(spacerItem6, 11, 2, 1, 3)
        self.btLimpar = QtWidgets.QPushButton(self.Cadastro)
        self.btLimpar.setObjectName("btLimpar")
        self.gridLayout_2.addWidget(self.btLimpar, 14, 6, 1, 1)
        spacerItem7 = QtWidgets.QSpacerItem(445, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_2.addItem(spacerItem7, 12, 0, 1, 2)
        spacerItem8 = QtWidgets.QSpacerItem(138, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_2.addItem(spacerItem8, 14, 8, 1, 1)
        self.cancelar = QtWidgets.QPushButton(self.Cadastro)
        self.cancelar.setObjectName("cancelar")
        self.gridLayout_2.addWidget(self.cancelar, 14, 7, 1, 1)
        self.line = QtWidgets.QFrame(self.Cadastro)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.gridLayout_2.addWidget(self.line, 2, 0, 1, 9)
        self.cbSistema = QtWidgets.QComboBox(self.Cadastro)
        self.cbSistema.setEnabled(False)
        self.cbSistema.setObjectName("cbSistema")
        self.cbSistema.addItem("")
        self.cbSistema.setItemText(0, "")
        self.cbSistema.addItem("")
        self.cbSistema.addItem("")
        self.cbSistema.addItem("")
        self.cbSistema.addItem("")
        self.cbSistema.addItem("")
        self.cbSistema.addItem("")
        self.cbSistema.addItem("")
        self.cbSistema.addItem("")
        self.cbSistema.addItem("")
        self.cbSistema.addItem("")
        self.cbSistema.addItem("")
        self.cbSistema.addItem("")
        self.cbSistema.addItem("")
        self.cbSistema.addItem("")
        self.cbSistema.addItem("")
        self.cbSistema.addItem("")
        self.cbSistema.addItem("")
        self.cbSistema.addItem("")
        self.cbSistema.addItem("")
        self.cbSistema.addItem("")
        self.cbSistema.addItem("")
        self.cbSistema.addItem("")
        self.cbSistema.addItem("")
        self.cbSistema.addItem("")
        self.cbSistema.addItem("")
        self.cbSistema.addItem("")
        self.cbSistema.addItem("")
        self.cbSistema.addItem("")
        self.cbSistema.addItem("")
        self.cbSistema.addItem("")
        self.gridLayout_2.addWidget(self.cbSistema, 3, 2, 1, 2)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.tipoServico = QtWidgets.QComboBox(self.Cadastro)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.tipoServico.setFont(font)
        self.tipoServico.setObjectName("tipoServico")
        self.horizontalLayout.addWidget(self.tipoServico)
        self.toolTipo = QtWidgets.QToolButton(self.Cadastro)
        self.toolTipo.setObjectName("toolTipo")
        self.horizontalLayout.addWidget(self.toolTipo)
        self.gridLayout_2.addLayout(self.horizontalLayout, 8, 2, 1, 3)
        self.observacao = QtWidgets.QTextEdit(self.Cadastro)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.observacao.setFont(font)
        self.observacao.setObjectName("observacao")
        self.gridLayout_2.addWidget(self.observacao, 13, 0, 1, 9)
        self.groupBox = QtWidgets.QGroupBox(self.Cadastro)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.groupBox.setFont(font)
        self.groupBox.setObjectName("groupBox")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.groupBox)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.label_30 = QtWidgets.QLabel(self.groupBox)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_30.setFont(font)
        self.label_30.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_30.setObjectName("label_30")
        self.gridLayout_3.addWidget(self.label_30, 0, 0, 1, 1)
        self.matSolicitante = QtWidgets.QLineEdit(self.groupBox)
        self.matSolicitante.setEnabled(True)
        font = QtGui.QFont()
        font.setPointSize(11)
        self.matSolicitante.setFont(font)
        self.matSolicitante.setText("")
        self.matSolicitante.setObjectName("matSolicitante")
        self.gridLayout_3.addWidget(self.matSolicitante, 0, 1, 1, 2)
        self.label_33 = QtWidgets.QLabel(self.groupBox)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_33.setFont(font)
        self.label_33.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_33.setObjectName("label_33")
        self.gridLayout_3.addWidget(self.label_33, 2, 0, 1, 2)
        self.PesqUnidade = QtWidgets.QLineEdit(self.groupBox)
        self.PesqUnidade.setEnabled(True)
        font = QtGui.QFont()
        font.setPointSize(11)
        self.PesqUnidade.setFont(font)
        self.PesqUnidade.setText("")
        self.PesqUnidade.setObjectName("PesqUnidade")
        self.gridLayout_3.addWidget(self.PesqUnidade, 2, 2, 1, 1)
        self.label = QtWidgets.QLabel(self.groupBox)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label.setFont(font)
        self.label.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label.setObjectName("label")
        self.gridLayout_3.addWidget(self.label, 3, 0, 1, 1)
        self.unidadeSolicitante = QtWidgets.QComboBox(self.groupBox)
        font = QtGui.QFont()
        font.setPointSize(9)
        self.unidadeSolicitante.setFont(font)
        self.unidadeSolicitante.setObjectName("unidadeSolicitante")
        self.gridLayout_3.addWidget(self.unidadeSolicitante, 3, 1, 1, 2)
        self.lbNomeC = QtWidgets.QLabel(self.groupBox)
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.lbNomeC.setFont(font)
        self.lbNomeC.setAlignment(QtCore.Qt.AlignCenter)
        self.lbNomeC.setObjectName("lbNomeC")
        self.gridLayout_3.addWidget(self.lbNomeC, 1, 0, 1, 3)
        self.gridLayout_2.addWidget(self.groupBox, 7, 5, 6, 4)
        self.matTecnico = QtWidgets.QLabel(self.Cadastro)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.matTecnico.setFont(font)
        self.matTecnico.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.matTecnico.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.matTecnico.setObjectName("matTecnico")
        self.gridLayout_2.addWidget(self.matTecnico, 9, 2, 1, 2)
        self.tabWidget.addTab(self.Cadastro, "")
        self.gridLayout_4.addWidget(self.tabWidget, 0, 1, 1, 1)
        self.setCentralWidget(self.layout)
        self.statusbar = QtWidgets.QStatusBar(self)
        self.statusbar.setObjectName("statusbar")
        self.setStatusBar(self.statusbar)

        self.retranslateUi(self)
        self.tabWidget.setCurrentIndex(0)
        self.cancelar.clicked.connect(self.close)
        self.chSol.clicked['bool'].connect(self.lineSol.setEnabled)
        self.chSol_2.clicked['bool'].connect(self.cbSistema.setEnabled)
        QtCore.QMetaObject.connectSlotsByName(self)

    def retranslateUi(self, editar_atendimento):
        _translate = QtCore.QCoreApplication.translate
        editar_atendimento.setWindowTitle(_translate("editar_atendimento", "DDT_GSU-Editar    v2.0.1"))
        self.lbNomeT.setText(_translate("editar_atendimento", "FORMULÁRIO EM MODO DE EDIÇÃO"))
        self.label_32.setText(_translate("editar_atendimento", "Descrição do atendimento"))
        self.label_21.setText(_translate("editar_atendimento", "Matrícula do Técnico:"))
        self.label_26.setText(_translate("editar_atendimento", "Tipo de serviço:"))
        self.lbSetor_2.setText(_translate("editar_atendimento", "SETOR:"))
        self.comboBoxAtendimento.setItemText(0, _translate("editar_atendimento", "SOL"))
        self.comboBoxAtendimento.setItemText(1, _translate("editar_atendimento", "Presencial"))
        self.comboBoxAtendimento.setItemText(2, _translate("editar_atendimento", "Visita Técinca"))
        self.comboBoxAtendimento.setItemText(3, _translate("editar_atendimento", "Telefone"))
        self.comboBoxAtendimento.setItemText(4, _translate("editar_atendimento", "Memorando"))
        self.comboBoxAtendimento.setItemText(5, _translate("editar_atendimento", "Email"))
        self.label_34.setText(_translate("editar_atendimento", "Data da Solicitação:"))
        self.label_31.setText(_translate("editar_atendimento", "Formulário em Modo de Edição ou Exclusão"))
        self.label_28.setText(_translate("editar_atendimento", "Serviço Concluido Em:"))
        self.label_23.setText(_translate("editar_atendimento", "Atenção!"))
        self.chSol.setText(_translate("editar_atendimento", "      Atendimento com chamado no sol Nº:  "))
        self.chSol_2.setText(_translate("editar_atendimento", "                               Suporte ao  Sitema:"))
        self.label_3.setText(_translate("editar_atendimento", "Forma de Contato:  "))
        self.salvar.setText(_translate("editar_atendimento", "Salvar"))
        self.btLimpar.setText(_translate("editar_atendimento", "Limpar Campos"))
        self.cancelar.setText(_translate("editar_atendimento", "Cancelar"))
        self.cbSistema.setItemText(1, _translate("editar_atendimento", "Carioca Digital"))
        self.cbSistema.setItemText(2, _translate("editar_atendimento", "Carioca LITE"))
        self.cbSistema.setItemText(3, _translate("editar_atendimento", "Etiqueta"))
        self.cbSistema.setItemText(4, _translate("editar_atendimento", "GMMobile"))
        self.cbSistema.setItemText(5, _translate("editar_atendimento", "GMNet"))
        self.cbSistema.setItemText(6, _translate("editar_atendimento", "INFOGM 1.0"))
        self.cbSistema.setItemText(7, _translate("editar_atendimento", "INFOGM 2.0"))
        self.cbSistema.setItemText(8, _translate("editar_atendimento", "INFRARIO - Perturbação do Sossego"))
        self.cbSistema.setItemText(9, _translate("editar_atendimento", "INFRARIO - VLT"))
        self.cbSistema.setItemText(10, _translate("editar_atendimento", "Mapa Operacional"))
        self.cbSistema.setItemText(11, _translate("editar_atendimento", "Outros"))
        self.cbSistema.setItemText(12, _translate("editar_atendimento", "Portal de Sistemas 1.0"))
        self.cbSistema.setItemText(13, _translate("editar_atendimento", "Portal de Sistemas 2.0"))
        self.cbSistema.setItemText(14, _translate("editar_atendimento", "REGER 1.0"))
        self.cbSistema.setItemText(15, _translate("editar_atendimento", "REGER 2.0"))
        self.cbSistema.setItemText(16, _translate("editar_atendimento", "RHonline"))
        self.cbSistema.setItemText(17, _translate("editar_atendimento", "RIO 2.0"))
        self.cbSistema.setItemText(18, _translate("editar_atendimento", "SAE"))
        self.cbSistema.setItemText(19, _translate("editar_atendimento", "SAIT 1.0"))
        self.cbSistema.setItemText(20, _translate("editar_atendimento", "SAIT 2.0"))
        self.cbSistema.setItemText(21, _translate("editar_atendimento", "SAO"))
        self.cbSistema.setItemText(22, _translate("editar_atendimento", "SCL"))
        self.cbSistema.setItemText(23, _translate("editar_atendimento", "SIDI"))
        self.cbSistema.setItemText(24, _translate("editar_atendimento", "SISADM"))
        self.cbSistema.setItemText(25, _translate("editar_atendimento", "SISCOTA"))
        self.cbSistema.setItemText(26, _translate("editar_atendimento", "SISPROC"))
        self.cbSistema.setItemText(27, _translate("editar_atendimento", "SISTIC"))
        self.cbSistema.setItemText(28, _translate("editar_atendimento", "SOL"))
        self.cbSistema.setItemText(29, _translate("editar_atendimento", "Terminal"))
        self.cbSistema.setItemText(30, _translate("editar_atendimento", "VIATRAN"))
        self.toolTipo.setText(_translate("editar_atendimento", "..."))
        self.observacao.setHtml(_translate("editar_atendimento", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:12pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.groupBox.setTitle(_translate("editar_atendimento", "Solicitante:"))
        self.label_30.setText(_translate("editar_atendimento", "Matrícula:"))
        self.label_33.setText(_translate("editar_atendimento", "Pesquisar Unidade:"))
        self.label.setText(_translate("editar_atendimento", "Unidade"))
        self.lbNomeC.setText(_translate("editar_atendimento", "NOME"))
        self.matTecnico.setText(_translate("editar_atendimento", "TextLabel"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.Cadastro), _translate("editar_atendimento", "Cadastro"))

        ######## FIM da Cópia #########

        self.salvar.clicked.connect(self.salvarUP)
        self.PesqUnidade.textChanged.connect(self.locCbUnidade)
        ##Limpar campos
        self.matSolicitante.clear()
        self.matTecnico.clear()
        self.lineSol.clear()
        self.observacao.clear()
        self.lbNomeT.setText("Formulário em Modo de Edição")
        self.lbNomeC.setText("Formulário em Modo de Edição")

        self.carregar()

    def carregar(self):
        ##Consulta dados na base de dados
        sql2 = (
                "SELECT setor, mat_tecnico, mat_solicitante, unidade, sistema, sol, forma_contato, tipo_servico, solicitacao_inicio, solicitacao_fim, descricao, remoto, hInicio, hFim, ip"
                " FROM atendimentos"
                " WHERE id = " + str(self.id_editar) )
        result_bd = (ConectarSqlite.conectarBd(sql2))
        # Carrega combobox tipo serviço
        self.tipoServico.clear()
        sql = ("SELECT id, tipo_atendimento FROM tipo_atendimentos WHERE setor = '"+result_bd[0][0]+"' ORDER BY tipo_atendimento;")
        result1 = ConectarSqlite.conectarBd(sql)
        for cont, item1 in enumerate(result1):
            self.tipoServico.insertItem(item1[0],str(item1[1]))
        #Carrega comobox sistemas
        self.cbSistema.clear()
        sql = ("SELECT id, sistema FROM sistemas ORDER BY sistema;")
        result = (ConectarSqlite.conectarBd(sql))
        for cont, item in enumerate(result):
            self.cbSistema.insertItem(item[0],str(item[1]))
        #Carega combobox UNIDADE
        self.unidadeSolicitante.clear()
        sql = ("SELECT id, unidade FROM unidades ORDER BY unidade;")
        result = (ConectarSqlite.conectarBd(sql))
        for cont, item in enumerate(result):
            if item[1][0:2] == 'GM':
                self.unidadeSolicitante.insertItem(item[0],str(item[1]))
        ##Recupera os dados Salvos
        self.lbSetor.setText(result_bd[0][0])
        self.matTecnico.setText(result_bd[0][1])
        self.matSolicitante.setText(result_bd[0][2])
        self.unidadeSolicitante.setCurrentText(result_bd[0][3])
        self.cbSistema.setCurrentText(result_bd[0][4])
        self.lineSol.setText(result_bd[0][5])
        self.comboBoxAtendimento.setCurrentText(result_bd[0][6])
        self.tipoServico.setCurrentText(result_bd[0][7])
        #Ajuste na hora
        try:
            solicit = datetime.datetime.strptime(result_bd[0][8], '%Y-%m-%d %H:%M:%S')
        except:
            solicit = datetime.datetime.strptime(result_bd[0][8], '%Y-%m-%d %H:%M')
        try:
            concl = datetime.datetime.strptime(result_bd[0][9], '%Y-%m-%d %H:%M:%S')
        except:
            concl = datetime.datetime.strptime(result_bd[0][9], '%Y-%m-%d %H:%M')

        hI = result_bd[0][12]
        hF = result_bd[0][13]

        self.observacao.clear()

        self.dateSolicitacao.setDateTime(solicit)
        self.dateConcluido.setDateTime(concl)
        for obs in result_bd[0][10].split(r"\n"):
            self.observacao.append(obs)
        self.show()

    def locCbUnidade (self):

        sql = ("SELECT id, unidade FROM unidades ORDER BY unidade;")
        result = (ConectarSqlite.conectarBd(sql))
        texto = self.PesqUnidade.text()
        texto = texto.upper()
        list = []

        try:
            for cont, item in enumerate(result):
                if item[1][0:2] == 'GM':
                    if  item[1].count(texto):
                        list.append(item[1])
            self.unidadeSolicitante.setCurrentText(list[0])
        except:
            pass

    def salvarUP(self):
        a = self.lbSetor.text()
        b = self.cbSistema.currentText()
        c = self.matTecnico.text()
        d = self.matSolicitante.text()
        e = self.unidadeSolicitante.currentText()
        f = self.lineSol.text()
        g = self.comboBoxAtendimento.currentText()
        h = self.tipoServico.currentText()
        i = self.dateSolicitacao.dateTime().toString('yyyy-MM-dd hh:mm')
        j = self.dateConcluido.dateTime().toString('yyyy-MM-dd hh:mm')
        k = self.observacao.toPlainText()

        sql =    ("UPDATE atendimentos " +
                " SET  mat_tecnico = '"   + str(c) +
                "'"+", mat_Solicitante = '" + str(d) +
                "'"+", unidade = '"        + str(e) +
                "'"+", sistema = '"          + str(b) +
                "'"+", sol = '"              + str(f) +
                "'"+", forma_contato = '"     + str(g) +
                "'"+", tipo_servico = '"      + str(h) +
                "'"+", solicitacao_inicio = '"+ str(i) +
                "'"+", solicitacao_fim = '"   + str(j) +
                "'"+", descricao = '"        + str(k) +
                "' WHERE id = " + str(self.id_editar)+";")
        print (sql)
        ConectarSqlite.conectarBd(sql)
        QMessageBox.about(self, 'Informação', 'Cadastro Editado com Sucesso')
        self.close()


if __name__ == "__main__":
    app = QApplication(sys.argv)
    editar = Editar()
    editar.show()
    app.exec_()
